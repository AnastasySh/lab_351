#pragma once
#include <string>
class str
{
private:		
public:
	str(); //нулевой конструктор
	/*~str(); // нулевой деструктор
	str(char[]); //конструктор копирующий из массива чаров
	str(const str &s1); // конструктор копирующий из объекта класса
	str(std::string s1); //конструктор копирующий из с++ строки
	void clear(); //очищение нашей строки
	void add(std::string s1);
	void add(char* a);//должно принимать массив чаров или строку с++ и делать их склейку с изначальной
	void insert(std::string s1); // вставляет внутри строки в заданную позицию (в параметре) последовательность символов или строку с++
	//должна быть защита от чтения записи за пределами выделенной памяти 
	//все это счастье должно быть защищено от утечки памяти. то есть следить за выделением и удалением памяти
	// должен быть код который красиво все это покажет
	// должны быть перегрузки + и ввывода на консоль << 
	//методы для шифрования и дешифрования
	void find(); //осуществляет поиск последовательности чаров или строки с++ в строке класса
	void save(); //сохранение в фаил
	void load(); //чтение из файла 
	int getsize();*/
	void test();
	protected:
	char *strok;
	int size;
};
